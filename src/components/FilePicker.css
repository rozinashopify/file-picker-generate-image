.Polaris-Modal-Dialog {
  --pc-modal-dialog-vertical-spacing: 12rem !important;
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  height: 100vh !important;
}

.Polaris-Modal-Dialog__Modal {
  --pc-modal-dialog-vertical-spacing: 20rem !important;
    max-height: unset !important;
  background: var(--p-color-bg-surface) !important;
  width: 950px !important;
  max-width: 90vw !important;
  margin: 0 auto !important;
  position: relative !important;
  top: 0 !important;
  transform: none !important;
}

@property --angle {
  syntax: "<angle>";
  inherits: false;
  initial-value: 0deg;
}

@keyframes rotate-gradient {
  to {
    --angle: 360deg;
  }
}

.magic-button {
  position: relative;
  display: inline-block;
  --angle: 0deg;
}


.magic-button:before {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  border-radius: var(--p-border-radius-200);
  filter: blur(2px);
  background: conic-gradient(
    from var(--angle) at 50% 50%,
    #a0cbff 0deg,
    #d1bdff 90deg,
    #f4c2ff 126deg,
    #ffb9a2 180deg,
    #f4c2ff 234deg,
    #d1bdff 270deg,
    #a0cbff 306deg
  );
  animation: rotate-gradient var(--p-motion-duration-5000) linear infinite;
  z-index: 0;
}

.magic-button .Polaris-Button.Polaris-Button svg {
  fill: var(--p-color-icon-magic) !important;
}

.magic-button .Polaris-Button.Polaris-Button {

  position: relative;
  z-index: 1;
  background: var(--p-color-bg-surface) !important;
  box-shadow: 0rem -0.0625rem 0rem 0rem rgba(181, 181, 181, 0.9) inset,
  0rem 0rem 0rem 0.0625rem rgba(0, 0, 0, 0.15) inset,
  0rem 0.03125rem 0rem 0.09375rem rgba(255, 255, 255, 0.05) inset !important
}

/* Mode transition animations */
.mode-transition {
  transition: all 0.3s ease-in-out;
}

.file-browser-container {
  position: relative;
  height: 100%;
  overflow-y: scroll;
  scrollbar-width: none; /* Firefox */
  -ms-overflow-style: none; /* IE/Edge */
}

.file-browser-container::-webkit-scrollbar {
  display: none;
}

.file-browser-container.fade-out {
    overflow: hidden;
}

.file-grid-container {
  transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  transform-origin: top center;
  position: absolute;
  opacity: 1;
  transform: translateY(0);
  will-change: transform;
}

.file-grid-container.fade-out {
  /* Remove the animation and just use transform */
  transform: translateY(370px);
  opacity: 0.2;
  transition: opacity 0.3s ease-out;
}

.file-grid-container.fade-out:hover {
  opacity: 0.4;
}

/* Add styles for when dragging */
.file-grid-container.dragging {
  transition: none; /* Remove transition during dragging for immediate response */
  opacity: 0.8;
}

.file-grid-arrow-button {
  position: absolute;
  top: -16px;
  left: 50%;
  transform: translateX(-50%);
  width: 32px;
  height: 32px;
  z-index: 10;
  opacity: 0;
  transition: opacity 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  display: flex;
  align-items: center;
  justify-content: center;
  pointer-events: auto;
  overflow: visible;
  cursor: grab;
  touch-action: none;
  will-change: transform;
}
@keyframes spread-gradient-left {
  from {
    background-size: 0% 100%;
    background-position: right;
  }
  to {
    background-size: 100% 100%;
    background-position: right;
  }
}

@keyframes spread-gradient-right {
  from {
    background-size: 0% 100%;
    background-position: left;
  }
  to {
    background-size: 100% 100%;
    background-position: left;
  }
}

.file-grid-arrow-button::before,
.file-grid-arrow-button::after {
  content: '';
  position: absolute;
  height: 1px;
  width: 450px;
  opacity: 0;
  transition: opacity 0.2s ease-out;
  z-index: 11;
  background-repeat: no-repeat;
  
}

.file-grid-arrow-button::before {

  transform: translateX(-250px);
  background-image: linear-gradient(
    270deg,
    var(--p-color-border-tertiary) 0%,
    var(--p-color-border-tertiary) 60%,
    transparent 100%
  );
  background-position: right;
}

.file-grid-arrow-button::after {

  transform: translateX(250px);
  background-image: linear-gradient(
    90deg,
    var(--p-color-border-tertiary) 0%,
    var(--p-color-border-tertiary) 60%,
    transparent 100%
  );
  background-position: left;
}

.file-grid-arrow-button:hover::before {
  opacity: 1;
  animation: spread-gradient-left 0.5s ease-out forwards;
}

.file-grid-arrow-button:hover::after {
  opacity: 1;
  animation: spread-gradient-right 0.5s ease-out forwards;
}



.file-grid-arrow-button.dragging {
  cursor: grabbing;
  opacity: 1;
  transition: transform 0.1s linear;
}

/* Show the arrow button when hovering over the file grid */
.file-grid-container.fade-out:hover .file-grid-arrow-button {
  opacity: 1;
}

.file-grid-arrow-button svg {
  transform: rotate(90deg);
  transition: transform 0.2s ease-out;
  fill: var(--p-color-icon-secondary) !important;
}

.file-grid-arrow-button:hover svg {
  fill: var(--p-color-icon-hover) !important;
}

/* Add a class for when the arrow button is being hovered */
.file-grid-container.fade-out.arrow-hovered {
  transform: translateY(320px);
  opacity: 0.8;
  transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1), opacity 0.5s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes grid-slide-down {
  from {
    transform: translateY(0);
    opacity: 1;
  }
  to {
    transform: translateY(370px);
    opacity: 0.8;
  }
}

/* Disable hover interactions on file cards when grid is faded out */
.file-grid-container.fade-out .file-container {
  cursor: default;
  pointer-events: none;
}

.file-grid-container.fade-out .file-container:hover {
  background-color: transparent;
}

.file-grid-container.fade-out .file-hover-actions {
  display: none;
}

.action-bar-container {
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

.action-bar-container.fade-out {
  opacity: 0;
    transform: translateY(-40px);
    transition-delay: 0s;
}

.upload-actions-container {
  transition: opacity 0.3s ease-out;
}

.upload-actions-container.fade-out {
  opacity: 0;
  transition-delay: 0s;
}

.modal-title {
  transition: all 0.3s ease-in-out;
}

/* Generate mode container styles */
.generate-mode-container {
    width: calc(100% - 40px);
    /*position: relative;
    height: 0;
    /* overflow: hidden;
    transition: height 0.3s ease-in-out;*/
    z-index: 100;
    position: absolute;
    height: 0;
    margin: 0 auto;
    opacity: 0;
    transition: 
      height 0.3s ease-in-out,
      opacity 0.2s ease-out;
}

.generate-mode-container.animate-padding {
  animation: 0.25s ease-in-out forwards container-expand;
    opacity: 1;
    transition: 
      height 0.3s ease-in-out,
      opacity 0.2s 0.1s ease-out; /* Add delay for opacity */
}

@keyframes container-expand {
  0% { height: 0; }
  100% { height: 450px; }
}

@keyframes container-collapse {
  0% { height: 450px; }
  100% { height: 0; }
}

.generate-mode-container:n.collapsing {
  overflow: hidden;
  animation: 0.25s ease-in-out forwards container-collapse;
}



.generate-mode-container.no-padding {
    height: 400px;
}

.generate-mode-container.from-variant {
    height: 400px;
}

/* Add new class for when loading or displaying an image */
.generate-mode-container.with-content {
    height: 520px;
    transform: translateY(-48px);
    opacity: 1;
}

.generate-mode-container .Polaris-Badge {
    padding:  var(--p-space-100) var(--p-space-200);
    background-color: var(--p-color-bg-surface);
    color: var(--p-color-text-magic);
    font-weight: var(--p-font-weight-medium);
    box-shadow: 0px 4px 6px -1px rgba(0, 0, 0, 0.04), 0px 1px 2px -0.5px rgba(0, 0, 0, 0.04), 0px 0.5px 0.5px 0px rgba(0, 0, 0, 0.06), 0px 0px 0px 1px rgba(115, 66, 250, 0.10);;
}

.generate-mode-container .Polaris-Badge:hover {
    background-color: var(--p-color-bg-surface-hover);
    cursor: pointer;
}

.generate-mode-input {
  position: relative;
  width: 480px;
  margin: 0 auto;
  opacity: 0;
  transform: translateY(160px);
  transition: transform 0.3s ease-out, opacity 0.3s ease-out;
  z-index: 1;
}

/* Initial animation (first stage) */
.generate-mode-container.animate-padding:not(.with-content) .generate-mode-input {
  animation: input-appear 300ms ease-in forwards;
  animation-delay: 0.15s;
}

/* Final content state (second stage) */
.generate-mode-container.with-content .generate-mode-input {
  transform: translateY(434px);
  opacity: 1;
  /* Cancel any ongoing animation */
  animation: input-to-content 300ms cubic-bezier(0.64, 0, 0.92, 0.56) forwards;
}

@keyframes input-appear {
  to {
      transform: translateY(177px);
      opacity: 1;
  }
}

@keyframes input-to-content {
  from { transform: translateY(250px); }
  to { transform: translateY(434px); }
}



.generate-mode-container.from-variant.with-content .generate-mode-input {
  animation: input-slide-down-variant 3s ease-out forwards;
}

.generate-mode-input:before {
    content: '';
    position: absolute;
    top: -1px;
    right: -1px;
    bottom: -1px;
    left: -1px;
    opacity: 40%;
    border-radius: var(--p-border-radius-200);
    filter: blur(0.3rem);
    background: conic-gradient(
      from var(--angle) at 50% 50%,
      #a0cbff 0deg,
      #d1bdff 90deg,
      #f4c2ff 126deg,
      #ffb9a2 180deg,
      #f4c2ff 234deg,
      #d1bdff 270deg,
      #a0cbff 306deg
    );
    animation: rotate-gradient var(--p-motion-duration-5000) linear infinite;
    z-index: 0;
  }

  .generate-mode-input:hover:before {
    content: '';
    position: absolute;
    top: -2px;
    right: -2px;
    bottom: -2px;
    left: -2px;
    opacity: 70%;
    border-radius: var(--p-border-radius-200);
    filter: blur(0.375rem);
    background: conic-gradient(
      from var(--angle) at 50% 50%,
      #a0cbff 0deg,
      #d1bdff 90deg,
      #f4c2ff 126deg,
      #ffb9a2 180deg,
      #f4c2ff 234deg,
      #d1bdff 270deg,
      #a0cbff 306deg
    );
    animation: rotate-gradient var(--p-motion-duration-5000) linear infinite;
    z-index: 0;
  }

.generate-mode-input .faux-input {
    background: var(--p-color-bg-surface);
    position: relative;
    z-index: 1;
    padding: var(--p-space-200) var(--p-space-200) var(--p-space-200) var(--p-space-300);
    border-radius: var(--p-border-radius-200);
    box-shadow: 0px 100px 80px 0px rgba(0, 0, 0, 0.07), 0px 41.778px 33.422px 0px rgba(0, 0, 0, 0.05), 0px 22.336px 17.869px 0px rgba(0, 0, 0, 0.04), 0px 12.522px 10.017px 0px rgba(0, 0, 0, 0.04), 0px 6.65px 5.32px 0px rgba(0, 0, 0, 0.03), 0px 2.767px 2.214px 0px rgba(0, 0, 0, 0.02);
}

.generate-mode-input .faux-input .Polaris-TextField__Backdrop {
    display: none;
}

.generate-mode-input .faux-input .Polaris-TextField__Input {
    padding: var(--p-space-150) 0;
    font-size: var(--p-font-size-350) !important;
}

/* Suggestion indicator styles */
.suggestion-indicator {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  align-items: center;
  pointer-events: none;
  z-index: 2;
  gap: 6px;
}

.suggestion-text {
  color: var(--p-color-text-subdued);
  opacity: 0.6;
  font-size: var(--p-font-size-350);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: calc(100% - 40px);
}

.tab-indicator {
  background-color: var(--p-color-bg-fill-secondary);
  border-radius: var(--p-border-radius-100);
  padding: 2px 4px;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
}

.tab-indicator img {
  width: 16px;
  height: 16px;
  opacity: 0.7;
}

@keyframes fade-in {
  0% {
    opacity: 0;
    transform: translateY(-20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Generate input container styles */
.generate-input-container {
  display: flex;
  flex-direction: column;
  gap: 16px;
  width: 100%;
  max-width: 600px;
  margin: 0 auto;
  padding: 24px;
  border-radius: var(--p-border-radius-200);
  background: var(--p-color-bg-surface);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
  animation: expand-input 0.5s ease-out forwards;
}

@keyframes expand-input {
  0% {
    opacity: 0;
    transform: scale(0.8);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

/* Animation for the magic button to input field transition */
.magic-button {
  transition: all 0.5s ease-in-out;
}

.magic-button.expand {
  width: 100%;
  max-width: 600px;
  margin: 0 auto;
}

/* Custom styles for the generate input field */
.generate-input-container .Polaris-TextField {
  width: 100%;
}

.generate-input-container .Polaris-TextField__Input {
  min-height: 100px;
  font-size: 16px;
  padding: 12px;
  border-radius: var(--p-border-radius-200);
  border: 1px solid var(--p-color-border-subdued);
  transition: border-color 0.2s ease-in-out;
}

.generate-input-container .Polaris-TextField__Input:focus {
  border-color: var(--p-color-border-focused);
  box-shadow: 0 0 0 1px var(--p-color-border-focused);
}

.generate-input-container .Polaris-Button {
  align-self: flex-end;
  min-width: 120px;
}

/* Remove padding from Modal.Section in generate mode */
.modal-content.generate-mode-content {
  background-image: radial-gradient(circle, var(--p-color-border-secondary) 1px, transparent 1px);
  background-size: 20px 20px;
  background-position: -10px -10px;
  background-color: var(--p-color-bg-surface);
  transition: height 0.3s ease-out forwards;
}

.modal-content.generate-mode-content.footer-hidden {
  height: calc(600px + 61px) !important;
}



/* Target the section element with class Polaris-Box directly with higher specificity */
.generate-mode .Polaris-Modal-Section > section.Polaris-Box[style*="--pc-box-padding"] {
  --pc-box-padding-block-start-xs: 0 !important;
  --pc-box-padding-block-end-xs: 0 !important;
  --pc-box-padding-inline-start-xs: 0 !important;
  --pc-box-padding-inline-end-xs: 0 !important;
}

/* Additional rule to target the element.style directly */
.generate-mode .Polaris-Modal-Section > section.Polaris-Box {
  --pc-box-padding-block-start-xs: 0 !important;
  --pc-box-padding-block-end-xs: 0 !important;
  --pc-box-padding-inline-start-xs: 0 !important;
  --pc-box-padding-inline-end-xs: 0 !important;
}

.loading-animation {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: var(--p-space-200);
  padding: var(--p-space-400);
  background: var(--p-color-bg-surface);
  border-radius: var(--p-border-radius-200);
  box-shadow: 0px 1px 4px 0px rgba(0, 0, 0, 0.04), 0px 4px 6px -1px rgba(0, 0, 0, 0.04), 0px 1px 2px -0.5px rgba(0, 0, 0, 0.04), 0px 0.5px 0.5px 0px rgba(0, 0, 0, 0.06), 0px 0px 0px 1px rgba(0, 0, 0, 0.05);
  animation: slide-down 0.3s ease-out forwards;
}

.generated-image-container {
  width: 100%;
  border-radius: var(--p-border-radius-200);
  overflow: hidden;
  box-shadow: 0px 1px 4px 0px rgba(0, 0, 0, 0.04), 0px 4px 6px -1px rgba(0, 0, 0, 0.04), 0px 1px 2px -0.5px rgba(0, 0, 0, 0.04), 0px 0.5px 0.5px 0px rgba(0, 0, 0, 0.06), 0px 0px 0px 1px rgba(0, 0, 0, 0.05);
  animation: fade-in 0.3s ease-out forwards;
}

.generated-image {
  width: 100%;
  height: auto;
  display: block;
  aspect-ratio: 16/9;
  object-fit: cover;
}

@keyframes slide-down {
  0% {
    opacity: 0;
    transform: translateY(-20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fade-in {
  0% {
    opacity: 0;
    transform: scale(0.98);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes container-enter {
    0% {
        opacity: 0;
        transform: translateX(-50%) translateY(-40px);
    }
    100% {
        opacity: 1;
        transform: translateX(-50%) translateY(0px);
    }
}

@keyframes padding-animate {
    from {
        padding-top: 0;
        opacity: 0;
        transform: translateY(-10px);
    }
    to {
        padding-top: 240px;
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes padding-collapse {
    from {
        padding-top: 240px;
        opacity: 1;
        transform: translateY(0);
    }
    to {
        padding-top: 0;
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes height-expand {
    from {
        height: 0;
        opacity: 0;
    }
    to {
        height: 427px;
        opacity: 1;
    }
}

@keyframes height-collapse {
    from {
        height: 427px;
        opacity: 1;
    }
    to {
        height: 0;
        opacity: 0;
    }
}

/* Add styles for the loading and image containers */
.loading-container, .image-container {
    position: absolute;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    border-radius: var(--p-border-radius-200);
    height: 0;
    opacity: 0;
    z-index: 1;
    width: 620px;
}

.loading-container.animate, .image-container.animate {
    animation: height-expand 0.3s ease-in-out forwards;
}

.loading-container.collapse, .image-container.collapse {
    animation: height-collapse 0.3s ease-in-out forwards;
}


  
.image-action-button button {
    background-color: rgba(0, 0, 0, 0.4) !important;
    color: white !important;
    transition: background-color 0.2s ease-in-out !important;
}
  
.image-action-button:hover button {
    background-color: rgba(0, 0, 0, 0.8) !important;
}
  

.image-action-button .Polaris-Button.Polaris-Button svg {
    fill: var(--p-color-icon-inverse) !important;
}

/* Generate button styles */
.generate-button-container {

}

.generate-button-container .Polaris-Button {
  border-radius: 50%;
  padding: 6px 4px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.generate-button-container .keep-button-wrapper  {
 padding-right: 2px;
}

/* Add styles for the Keep and Discard buttons */
.generate-button-container .discard-button-wrapper .Polaris-Button,
.generate-button-container .keep-button-wrapper .Polaris-Button {
  border-radius: var(--p-border-radius-200);
  padding: 6px 12px;
}

.generate-button-container .keep-button-wrapper .Polaris-Button--primary {
  background-color: var(--p-color-bg-surface);
  color: var(--p-color-text);
  border: 1px solid var(--p-color-border);
  
}

.generate-button-container .keep-button-wrapper .Polaris-Button--primary:hover {
  background-color: var(--p-color-bg-surface-hover);
  border-color: var(--p-color-border-hover);
}

.generate-button-container .discard-button-wrapper .Polaris-Button--secondary {
  background-color: var(--p-color-bg-surface);
  color: var(--p-color-text);
  border: 1px solid var(--p-color-border);
}

.generate-button-container .discard-button-wrapper .Polaris-Button--secondary:hover {
  background-color: var(--p-color-bg-surface-hover);
  border-color: var(--p-color-border-hover);
}

.generate-button-container .arrow-up-button-wrapper {
  padding: 6px;
}

.stop-button-container {
  padding: 3px 3px;
}


.generate-button-container .arrow-up-button-wrapper .Polaris-Button svg {
    fill: currentColor !important;
    transition: transform 0.15s ease-in-out !important;
}

.generate-button-container .arrow-up-button-wrapper .Polaris-Button:hover svg {
    transform: translateY(-2px);
}

.generate-button-container .arrow-up-button-wrapper .Polaris-Button:disabled,
.generate-button-container .arrow-up-button-wrapper .Polaris-Button.Polaris-Button--disabled {
  background-color: var(--p-color-bg-fill-transparent-secondary);
}

.generate-button-container .arrow-up-button-wrapper .Polaris-Button:disabled svg,
.generate-button-container .arrow-up-button-wrapper .Polaris-Button.Polaris-Button--disabled svg {
    fill: #FFF !important;
}

.generate-button-container .arrow-up-button-wrapper .Polaris-Button:not(.Polaris-Button--disabled) {
  background-color: var(--p-color-text-magic-secondary);
}

.generate-button-container .arrow-up-button-wrapper .Polaris-Button:not(.Polaris-Button--disabled):hover {
    background-color: var(--p-color-text-magic);
  }

.generate-button-container .arrow-up-button-wrapper .Polaris-Button:not(.Polaris-Button--disabled) svg {
    fill: #FFF !important;
}


.custom-stop-button {
  border-radius: 50%;
  padding: 8px 6px;
  min-width: 26px;
  min-height: 26px;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: var(--p-color-icon-secondary);
  cursor: pointer;
  transition: background-color 0.2s ease;
}

.custom-stop-button:hover {
  background-color: var(--p-color-icon-secondary-hover);
}

.custom-stop-icon {
  width: 8px;
  height: 9px;
  background-color: var(--p-color-bg-surface);
  border-radius: 2px;
}

.generating-indicator {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  z-index: 1;
}

.generating-text {
  color: var(--p-color-text-magic);
  font-size: 14px;
  font-weight: 500;
}

.original-image-container {
  position: absolute;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    z-index: 1;
    width: 620px;
    border-radius: var(--p-border-radius-200);
    overflow: hidden;
    box-shadow: 0px 1px 4px 0px rgba(0, 0, 0, 0.04), 0px 4px 6px -1px rgba(0, 0, 0, 0.04), 0px 1px 2px -0.5px rgba(0, 0, 0, 0.04), 0px 0.5px 0.5px 0px rgba(0, 0, 0, 0.06), 0px 0px 0px 1px rgba(0, 0, 0, 0.05);
    animation: container-enter 0.3s ease-out forwards;
    transition: transform 0.3s ease-out, opacity 0.3s ease-out;
}

.original-image-container img {
  width: 100%;
  height: auto;
  display: block;
  aspect-ratio: 3/2;
  object-fit: cover;
}

@keyframes container-expand {
    0% {
        height: 0;
    }
    100% {
        height: 320px;
    }
}

@keyframes container-collapse {
    0% {
        height: 480px;
    }
    100% {
        height: 0;
    }
}

@keyframes input-slide-in {
    0% {
        opacity: 0;
        transform: translateY(100px);
    }
    100% {
        opacity: 1;
        transform: translateY(170px);
    }
}



.generate-image-button .Polaris-Button svg {
  fill: var(--p-color-icon-magic) !important;
}

.generate-image-button .Polaris-Button .Polaris-Button__Text {
  color: var(--p-color-text-magic) !important;
}

/* Ensure modal is centered on all screen sizes */
.Polaris-Modal {
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  min-height: 100vh !important;
}

.Polaris-Modal__Wrapper {
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  min-height: 100vh !important;
  padding: 0 !important;
}

/* Ensure consistent modal content */
.modal-content {
  
  scrollbar-width: thin;
  position: relative;

  overflow: hidden;
}

.modal-content::-webkit-scrollbar {
  width: 6px;
}

.modal-content::-webkit-scrollbar-track {
  background: var(--p-color-bg-fill-secondary);
  border-radius: 3px;
}

.modal-content::-webkit-scrollbar-thumb {
  background: var(--p-color-border-subdued);
  border-radius: 3px;
}

/* Custom modal styling to ensure consistent height and centering */
.custom-modal {
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
}

.custom-modal .Polaris-Modal {
  height: 600px !important;
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
}

/* Sidekick avatar animation */
@keyframes blink {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
}

.sidekick-avatar {
  animation: blink 1s infinite;
}



.image-action-button .Polaris-Button svg {
  fill: #FFF !important;
}

/* Special styling for the save to files button */
.image-action-button .Polaris-Button--primary {
  background-color: var(--p-color-bg-primary) !important;
  color: var(--p-color-text-primary) !important;
  padding: var(--p-space-200) var(--p-space-400);
}

.image-action-button .Polaris-Button--primary:hover {
  background-color: var(--p-color-bg-primary-hover) !important;
}

/* Modal footer animation */
.Polaris-Modal-Dialog__Modal {
  position: relative;
}

.Polaris-Modal-Dialog__Modal>.Polaris-InlineStack {
  position: absolute;
  bottom: 0;
  width: 100%;
  background-color: var(--p-color-bg-surface);
}



/* Modal footer animation */
.modal-footer-fade-out {
  animation: footer-fade-out 0.3s ease-out forwards;
  pointer-events: none;
}

.modal-footer-fade-in {
  animation: footer-fade-in 0.3s ease-out forwards;
  pointer-events: auto;
}

@keyframes footer-fade-out {
  0% {
    height: 61px;
    opacity: 1;
    transform: translateY(0);
  }
  100% {
    height: 0;
    opacity: 0;
    transform: translateY(20px);
  }
}

@keyframes footer-fade-in {
  0% {
    opacity: 0;
    height: 0;
    transform: translateY(20px);
  }
  100% {
    height: 61px;
    opacity: 1;
    transform: translateY(0);
  }
}

/* Add styles for dragging state */
.generate-mode-container.dragging {
  transition: transform 0.1s linear, opacity 0.1s linear !important;
}

.generate-mode-container.dragging.with-content {
  transform: translateY(-48px) !important; /* Keep the base position */
}

.generate-mode-container.dragging.with-content.from-variant {
  transform: translateY(-48px) !important; /* Keep the base position */
}

/* Override the transform when dragging is active */
.generate-mode-container.dragging.with-content,
.generate-mode-container.dragging.with-content.from-variant {
  transform: translateY(calc(-48px - var(--drag-distance, 0px))) !important;
}